{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "description": "Social Media API's to register and authenticate a user, create post and other operations assocated with post",
      "title": "Postaway"
    },
    "servers": [
      {
        "url": "http://localhost:3500"
      }
    ],
    "components": {
      "securitySchemes": {
        "JWT": {
          "type": "apiKey",
          "in": "header",
          "name": "Authorization"
        }
      }
    },
    "paths": {
      "/api/users/login": {
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Login",
          "description": "User Login to get Token",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email",
                    "password"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Invalid Credentials"
            }
          }
        }
      },
      "/api/posts/all": {
        "get": {
          "tags": [
            "Posts"
          ],
          "summary": "Get all posts with pagination",
          "description": "Get All posts on the server with pagination",
          "security": [
            {
              "JWT": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/posts": {
        "post": {
          "tags": [
            "Posts"
          ],
          "summary": "Create a post",
          "security": [
            {
              "JWT": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "caption": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "description": "Enter Caption and file to create a post"
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad request"
            }
          }
        },
        "get": {
          "tags": [
            "Posts"
          ],
          "summary": "Get user posts",
          "description": "Get post based on user credentials",
          "security": [
            {
              "JWT": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/posts/{id}": {
        "get": {
          "tags": [
            "Posts"
          ],
          "summary": "Get a specific post",
          "description": "Get specific posts by id",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "Posts"
          ],
          "summary": "Update a post",
          "description": "Update Post By Id",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Update Post By Id"
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "caption": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "UnAuthorized"
            },
            "403": {
              "description": "you Are not authorized to update the post"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "Posts"
          ],
          "summary": "Delete a post",
          "description": "Delete a Post By Id",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Delete a Post By Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "UnAuthorized"
            },
            "403": {
              "description": "you Are not authorized to delete the post"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/api/posts/filter": {
        "get": {
          "tags": [
            "Posts"
          ],
          "summary": "filter post based on caption",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "caption",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Enter The Caption to filter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "404": {
              "description": "Not Found"
            },
            "401": {
              "description": "UnAuthorized"
            }
          }
        }
      },
      "/api/posts/{postId}/save": {
        "post": {
          "tags": [
            "Posts"
          ],
          "summary": "Save post by PostId",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "postId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              },
              "description": "ID of the post to Save"
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Post Already saved by the user"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/api/posts/{postId}/archieve": {
        "put": {
          "tags": [
            "Posts"
          ],
          "summary": "Archieve post Based on PostId",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "postId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              },
              "description": "ID of the post to Archieve"
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/api/posts/{postId}/bookmark": {
        "post": {
          "tags": [
            "Posts"
          ],
          "summary": "Add Post to Bookmark",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "postId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "ID of the post to bookmark"
            }
          ],
          "responses": {
            "201": {
              "description": "Bookmark Added"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/api/comments/{id}": {
        "get": {
          "tags": [
            "Comments"
          ],
          "summary": "Get comments for a post with postId",
          "description": "Enter Id to get the Comments",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Enter Id to get the Comments"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "Comments"
          ],
          "summary": "Add a comment to a post",
          "description": "Enter id to Post a comment",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Enter id to Post a comment"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "put": {
          "tags": [
            "Comments"
          ],
          "summary": "Update a comment",
          "description": "Update Comment By Id",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Update Comment By Id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "Comments"
          ],
          "summary": "Delete a comment",
          "description": "Delete Comment By Id",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Delete a Comment By Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/api/comments/pages/{id}": {
        "get": {
          "tags": [
            "Comments"
          ],
          "summary": "Get paginated Comments",
          "description": "enter pageNo to get paginated comments",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [{
            "name":"postId",
            "in":"path",
            "required":true,
            "schema":{
              "type":"number"
            },"description": "Enter The postId"
          },
            {
              "name": "page",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Enter The pageNo"
            },{
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Enter The limit"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/api/likes/{id}": {
        "post": {
          "tags": [
            "Likes"
          ],
          "summary": "Add a like to a post",
          "description": "Add like By postId",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Add like By postId"
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "get": {
          "tags": [
            "Likes"
          ],
          "summary": "Get all likes for a post",
          "description": "Get all likes By postId",
          "security": [
            {
              "JWT": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Get all likes By postId"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    }
  }